{"version":3,"names":["myComponentCss","MyComponentStyle0","MyComponent","componentWillLoad","response","fetch","ok","data","json","this","chatMessages","chat","console","error","render","h","key","class","map","msg","index","type","isAIReply","content","title","text","src","imageUrl","alt","href","productUrl","target","rel"],"sources":["src/components/my-component/my-component.css?tag=my-component&encapsulation=shadow","src/components/my-component/my-component.tsx"],"sourcesContent":[":host {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Helvetica Neue', Arial, sans-serif;\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  background-color: #f0f2f5; /* Softer background color */\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n}\n\n.chat-container {\n  display: flex;\n  flex-direction: column;\n  width: 900px; /* Slightly increased width */\n  height: 620px; /* Slightly increased height */\n  background-color: #ffffff;\n  border-radius: 15px; /* More rounded corners */\n  overflow: hidden;\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15); /* More pronounced shadow */\n}\n\n.chat-header {\n  background: linear-gradient(45deg, #007bff, #0056b3); /* Gradient header for a professional look */\n  color: white;\n  text-align: center;\n  padding: 15px;\n  font-size: 1.5em; /* Larger font for emphasis */\n  font-weight: bold;\n}\n\n.chat-messages {\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n  background-color: #f9f9f9;\n  display: flex;\n  flex-direction: column;\n  gap: 10px; /* Consistent spacing between messages */\n}\n\n.chat-message {\n  padding: 15px;\n  border-radius: 12px;\n  max-width: 80%; /* Slightly increased width for better balance */\n  position: relative;\n  font-size: 1em;\n  line-height: 1.4;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1); /* Add subtle shadow to messages */\n}\n\n.chat-message.ai {\n  background-color: #e1f5fe;\n  align-self: flex-start; /* Align AI messages to the left */\n  border: 1px solid #b3e5fc;\n}\n\n.chat-message.user {\n  background-color: #d1e7dd;\n  align-self: flex-end; /* Align user messages to the right */\n  border: 1px solid #a3d5c3;\n}\n\n/* Styles for card messages */\n.chat-card {\n  padding: 15px;\n  border-radius: 12px;\n  background-color: #ffffff;\n  border: 1px solid #e0e0e0;\n  width: 100%; /* Full width to stack vertically */\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05); /* Subtle shadow for depth */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  transition: transform 0.3s, box-shadow 0.3s; /* Add smooth transition */\n}\n\n.chat-card:hover {\n  transform: translateY(-5px); /* Lift card slightly on hover */\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);\n}\n\n.chat-card img {\n  max-width: 100%;\n  border-radius: 10px;\n  margin: 10px 0;\n}\n\n.chat-card h4 {\n  margin: 10px 0;\n  font-size: 1.2em;\n  font-weight: 600;\n  color: #333; /* Darker color for better readability */\n}\n\n.chat-card a {\n  margin-top: 10px;\n  padding: 8px 16px;\n  background-color: #007bff;\n  color: white;\n  border-radius: 8px;\n  text-decoration: none;\n  font-weight: bold;\n  transition: background-color 0.3s;\n}\n\n.chat-card a:hover {\n  background-color: #0056b3;\n}\n\n.chat-input-container {\n  display: flex;\n  border-top: 1px solid #ddd;\n  padding: 15px;\n  background-color: #ffffff;\n}\n\n.chat-input {\n  flex: 1;\n  padding: 12px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  font-size: 1em;\n  transition: border-color 0.3s;\n}\n\n.chat-input:focus {\n  border-color: #007bff; /* Highlight border on focus */\n  outline: none;\n}\n\n.send-button {\n  margin-left: 10px;\n  padding: 12px 24px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 1em;\n  font-weight: bold;\n  transition: background-color 0.3s, transform 0.3s;\n}\n\n.send-button:hover {\n  background-color: #0056b3;\n  transform: translateY(-2px); /* Lift button slightly on hover */\n}\n","import { Component, State, h } from '@stencil/core';\n\ninterface ChatMessage {\n  type: string; // e.g., 'text' or 'card'\n  content: any; // can be a string for text or an object for cards\n  isAIReply?: boolean; // Optional property to indicate if the message is from AI\n}\n\n@Component({\n  tag: 'my-component',\n  styleUrl: 'my-component.css',\n  shadow: true,\n})\nexport class MyComponent {\n  /**\n   * Backend chat messages\n   */\n  @State() chatMessages: ChatMessage[] = [];\n\n  async componentWillLoad() {\n    try {\n      const response = await fetch('http://localhost:5000/api/fetch-conversation'); // Replace with your backend URL\n      if (response.ok) {\n        const data = await response.json();\n        this.chatMessages = data.chat; // Assuming the response structure is compatible\n      } else {\n        console.error('Error fetching chat messages');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"chat-container\">\n        <div class=\"chat-header\">Timmy AI</div>\n        <div class=\"chat-messages\">\n          {this.chatMessages &&\n            this.chatMessages.map((msg, index) => {\n              if (msg.type === 'text') {\n                return (\n                  <div class={`chat-message ${msg.isAIReply ? 'ai' : 'user'}`} key={index}>\n                    {msg.content}\n                  </div>\n                );\n              } else if (msg.type === 'card') {\n                return (\n                  <div class=\"chat-card\" key={index}>\n                    <h4>{msg.content.title.text}</h4>\n                    <img src={msg.content.imageUrl} alt={msg.content.title.text} />\n                    <a href={msg.content.productUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                      View Product\n                    </a>\n                  </div>\n                );\n              }\n              return null; // In case of unrecognized message type\n            })}\n        </div>\n        {/*<div class=\"chat-input-container\">\n          <input type=\"text\" class=\"chat-input\" placeholder=\"Type your message...\" />\n          <button class=\"send-button\">Send</button>\n        </div>*/}\n      </div>\n    );\n  }\n}\n"],"mappings":"2CAAA,MAAMA,EAAiB,kqEACvB,MAAAC,EAAeD,E,MCYFE,EAAW,M,2CAIiB,E,CAEvC,uBAAMC,GACJ,IACE,MAAMC,QAAiBC,MAAM,gDAC7B,GAAID,EAASE,GAAI,CACf,MAAMC,QAAaH,EAASI,OAC5BC,KAAKC,aAAeH,EAAKI,I,KACpB,CACLC,QAAQC,MAAM,+B,EAEhB,MAAOA,GACPD,QAAQC,MAAM,SAAUA,E,EAI5B,MAAAC,GACE,OACEC,EAAA,OAAAC,IAAA,2CAAKC,MAAM,kBACTF,EAAA,OAAAC,IAAA,2CAAKC,MAAM,eAAa,YACxBF,EAAA,OAAAC,IAAA,2CAAKC,MAAM,iBACRR,KAAKC,cACJD,KAAKC,aAAaQ,KAAI,CAACC,EAAKC,KAC1B,GAAID,EAAIE,OAAS,OAAQ,CACvB,OACEN,EAAA,OAAKE,MAAO,gBAAgBE,EAAIG,UAAY,KAAO,SAAUN,IAAKI,GAC/DD,EAAII,Q,MAGJ,GAAIJ,EAAIE,OAAS,OAAQ,CAC9B,OACEN,EAAA,OAAKE,MAAM,YAAYD,IAAKI,GAC1BL,EAAA,UAAKI,EAAII,QAAQC,MAAMC,MACvBV,EAAA,OAAKW,IAAKP,EAAII,QAAQI,SAAUC,IAAKT,EAAII,QAAQC,MAAMC,OACvDV,EAAA,KAAGc,KAAMV,EAAII,QAAQO,WAAYC,OAAO,SAASC,IAAI,uBAAqB,gB,CAMhF,OAAO,IAAI,K","ignoreList":[]}